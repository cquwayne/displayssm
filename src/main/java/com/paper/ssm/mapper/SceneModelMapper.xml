<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paper.ssm.dao.SceneModelDao">

    <resultMap type="com.paper.ssm.entity.SceneModel" id="SceneModelMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="processTypeId" column="process_type_id" jdbcType="INTEGER"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SceneModelMap">
        select
          id, title, process_type_id, description
        from paper.scene_model
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SceneModelMap">
        select
          id, title, process_type_id, description
        from paper.scene_model
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SceneModelMap">
        select
        id, title, process_type_id, description
        from paper.scene_model
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="processTypeId != null">
                and process_type_id = #{processTypeId}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into paper.scene_model(title, process_type_id, description)
        values (#{title}, #{processTypeId}, #{description})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into paper.scene_model(title, process_type_id, description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.processTypeId}, #{entity.description})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into paper.scene_model(title, process_type_id, description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.processTypeId}, #{entity.description})
        </foreach>
        on duplicate key update
        title = values(title) , process_type_id = values(process_type_id) , description = values(description)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update paper.scene_model
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="processTypeId != null">
                process_type_id = #{processTypeId},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from paper.scene_model where id = #{id}
    </delete>

</mapper>