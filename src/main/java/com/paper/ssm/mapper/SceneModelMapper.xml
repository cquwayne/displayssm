<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paper.ssm.dao.SceneModelDao">

    <resultMap type="com.paper.ssm.entity.SceneModel" id="SceneModelMap">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="processTypeId" column="process_type_id" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <association property="processType" column="process_type_id"
                     select="com.paper.ssm.dao.ProcessTypeDao.queryById"/>
        <association property="parent" column="parent_Id" select="com.paper.ssm.dao.SceneModelDao.queryTitleById"/>
    </resultMap>

    <resultMap type="com.paper.ssm.entity.SceneModel" id="SceneModelAllMap">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="processTypeId" column="process_type_id" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <association property="processType" column="process_type_Id" select="com.paper.ssm.dao.ProcessTypeDao.queryById"/>
        <association property="parent" column="parent_Id" select="com.paper.ssm.dao.SceneModelDao.querySimpleById"/>
        <collection column="id" property="elementDataList" ofType="com.paper.ssm.entity.ElementData"
                    javaType="java.util.ArrayList" select="com.paper.ssm.dao.ElementDataDao.selectElementDataListBySceneId"/>
    </resultMap>

    <resultMap type="com.paper.ssm.entity.SceneModel" id="SimpleSceneModel">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SceneModelAllMap">
        select
          *
        from paper.scene_model
        where id = #{id}
    </select>

    <select id="querySimpleById" resultMap="SceneModelMap">
        select
          *
        from paper.scene_model
        where id = #{id}
    </select>

    <select id="queryTitleById" resultMap="SimpleSceneModel">
        select
          title
        from paper.scene_model
        where id = #{id}
    </select>

    <!--查询场景所有数据包含要素数据-->
    <select id="queryAllData" resultMap="SceneModelMap">
        select
          *
        from paper.scene_model
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SceneModelMap">
        select
        *
        from paper.scene_model
<!--        <where>-->
<!--            <if test="id != null">-->
<!--                and id = #{id}-->
<!--            </if>-->
<!--            <if test="title != null and title != ''">-->
<!--                and title = #{title}-->
<!--            </if>-->
<!--            <if test="processTypeId != null">-->
<!--                and process_type_id = #{processTypeId}-->
<!--            </if>-->
<!--            <if test="description != null and description != ''">-->
<!--                and description = #{description}-->
<!--            </if>-->
<!--        </where>-->
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into paper.scene_model(title, process_type_id, description)
        values (#{title}, #{processTypeId}, #{description})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into paper.scene_model(title, process_type_id, description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.processTypeId}, #{entity.description})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into paper.scene_model(title, process_type_id, description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.processTypeId}, #{entity.description})
        </foreach>
        on duplicate key update
        title = values(title) , process_type_id = values(process_type_id) , description = values(description)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update paper.scene_model
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="processTypeId != null">
                process_type_id = #{processTypeId},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from paper.scene_model where id = #{id}
    </delete>

</mapper>